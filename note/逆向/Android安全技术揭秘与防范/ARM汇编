### 嵌入式处理器

嵌入式处理器是嵌入式系统的核心，是控制、辅助系统运行的硬件单元。目前常见的嵌入式处理器有：

- 嵌入式微处理器（MPU）
- 嵌入式微控制器（MCU）
- 嵌入式DSP处理器（DSP）
- 嵌入式片上系统（SoC)

ARM架构属于RISC指令集，指令集**精简**、指令**等长**。虽然这样设计可以提高处理效率，当遇到复杂的指令后，就需要更多的简单指令来堆砌复杂任务。面对不断升级的Android系统，单核的ARM芯片已经很难支持其流畅地运行。故此ARM架构的处理器也在不断的提升自我，最终通过多个指令完成复杂的任务操作。

当然其他领域也纷纷开始支持Android系统：

处理器 | 概况
-- | --
ARM | 最早支持，支持的最完善。只要用在手机市场，目前积极进军上网本，智能家居等市场
X86 | 目前支持的比较完善。推出了atom+Android的上网本，卖点在于支持Atom+Android和Atom+Win7双系统
MIPS | 目前在移植、完善过程中。主要目标在智能家电、上网本领域。龙芯也在积极支持Android
POWER PC | 目前在移植，完善过程中

#### ARM微处理器的工作状态

从编程的角度来看，ARM微处理器的工作状态有两种，并且可在两种状态下切换：

- ARM状态 -- 此时处理器执行32位的字对齐的ARM指令
- Thumb状态 -- 此时处理器执行16位的、半字对其的Thumb指令

处理器工作状态的转变并不影响处理器的工作模式和相应寄存器中的内容。ARM指令集和Thumb指令集均有相应的切换处理器状态的命令，可在两种状态下切换。但ARM微处理器在开始执行代码时，应该处于ARM状态。

进入Thumb状态，当操作数寄存器的状态位（位0）为1时，可采用执行BX指令的方法，使微处理器从ARM状态切换到Thumb状态。当处理器处于Thumb状态时发生异常（如IRQ、FIQ、Undef、Abort、SWI等），则异常处理返回时自动切换为Thumb状态。

进入ARM状态，当操作数寄存器的状态位为0时，执行BX指令可使微处理器从Thumb状态切换到ARM状态。在处理异常时，把PC指针放入异常模式链接寄存器中，并从异常向量地址开始执行程序，也可以使处理器切换到ARM状态。

